{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 # Required Libraries: \
library (tidyverse)\
library (ggraph)\
library (igraph)\
library (gridExtra)\
library (randomcoloR)\
library(immunarch)\
\
###################\
# TCR Convergence #\
###################\
\
# @param patient: Patient desired for analysis\
# @param cohort: Sample cohort desired for analysis\
# @param timepoint_order: Timepoint order desired for analysis\
# @param step2_output_filename: Filename for step 2 file\
# @param step2_output_datapath: Datapath for step 2 file\
\
TCRConvergence <- fuction(patient, cohort, timepoint_order, step2_output_filename, step2_output_datapath)\{\
\
    #Reading the input files:      \
    #Concatenated file generated by '''Step2_TRBclonotype_txtFile_concatenation.R'''\
    clonotypes <- read_csv(\
            file.path(\
                    step2_output_datapath , \
                    step2_output_filename\
                    ), \
            )%>% \
            filter ( Patient_id %in% patient)%>%\
            filter ( Cohort == cohort) %>%\
            filter ( cloneCount > 1) %>%\
            mutate(VJcombo = gsub("[.]", "_", VJcombo))\
            #mutate ( VJcombo = stringr::str_c(Vcassette ,      #Because the presence of dot'.' symbol is a source of error for ggraph\
                                             #"_" ,             #we need to re-generate VJcombo column, where V and J genes are glued\
                                             #Jcassette) )      #by "_" instead of ".".\
\
    # Removing unproductive clones and recomputing the clone fraction\
    clonotypes <- clonotypes[-c(grep("[*]", clonotypes$aaSeqCDR3)),]\
    clonotypes <- clonotypes[-c(grep("_", clonotypes$aaSeqCDR3)),]\
    for(clone in 1:length(clonotypes$cloneFraction))\{\
        clonotypes$cloneFraction[clone] <- clonotypes$cloneCount[clone]/sum(clonotypes[which(clonotypes$Cycle==clonotypes$Cycle[clone]),]$cloneCount)\
    \}\
\
    #Concatenated file generated by '''Step1_aaCDR3perVJ_input_generation.R'''\
    cassette_stats <- read_csv(\
            file.path(\
                    step1_output_datapath , \
                    step1_output_filename )\
            )%>%\
            filter ( Patient_id %in% patient ) %>%\
            filter ( Cohort == cohort ) %>%\
            filter ( Number_aaCDR3 > 1 ) %>%\
            select ( Patient_id , Cycle , VJcombo ) %>%\
            mutate ( VJcombo = str_replace ( VJcombo , "\\\\.", "_"))\
\
    # Creating a dataframe analyzing the TCR convergence present at each point\
    TCRConvergence <- data.frame(matrix(ncol=length(unique(clonotypes$Cycle)), \
                                       nrow=1, NA))\
    # Computing the TCR convergence at each timepoint\
    colnames(TCRConvergence) <- unique(clonotypes$Cycle)\
    for(i in 1:length(unique(clonotypes$Cycle)))\{\
       cycle_df <- clonotypes[which(clonotypes$Cycle==unique(clonotypes$Cycle)[i]),]\
       cycle_df$occurence <- NA\
       for(f in 1:nrow(cycle_df))\{\
        cycle_df$occurence[f] <- length(cycle_df[which(cycle_df$aaSeqCDR3==cycle_df$aaSeqCDR3[f]),]$aaSeqCDR3)\
    \}\
    duplicated_cycle <- cycle_df[which(cycle_df$occurence > 1),]\
    duplicated_cycle$Variable <- NA\
    # Defining variable section for each clonotype\
    for(row in 1:nrow(duplicated_cycle))\{\
        if(length(duplicated_cycle$aaSeqCDR3)!=0)\{\
        duplicated_cycle$Variable[row] <- strsplit(duplicated_cycle$VJcombo[row], "_")[[1]][1]\
    \}\
    \}\
    \
    for(CDR3 in unique(duplicated_cycle$aaSeqCDR3))\{\
        single_CDR3 <- duplicated_cycle[which(duplicated_cycle$aaSeqCDR3==CDR3),]\
        if(length(unique(single_CDR3$aaSeqCDR3))!=length(unique(single_CDR3$Variable)))\{\
            print("Variable Sequence Doesn't Match")\
            \}\
        \}\
    TCRConvergence[i][[1]] <- sum(duplicated_cycle$cloneFraction)\
    \}\
    TCRConvergence\
\}}