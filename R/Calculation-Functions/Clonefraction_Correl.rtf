{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 ######################################################\
# Correlation between clone fraction and CDR3 per VJ #\
######################################################\
\
# Required Libraries: \
library (tidyverse)\
library (ggraph)\
library (igraph)\
library (gridExtra)\
library (randomcoloR)\
\
# @param patient: Patient desired for analysis\
# @param cohort: Sample cohort desired for analysis\
# @param timepoint_order: Timepoint order desired for analysis\
# @param step2_output_filename: Filename for step 1 file\
# @param step2_output_datapath: Datapath for step 1 file\
# @param step2_output_filename: Filename for step 2 file\
# @param step2_output_datapath: Datapath for step 2 file\
\
Clonefraction_Correl <- function(patient, cohort, timepoint_order, step1_output_filename, \
                      step1_output_datapath, step2_output_filename, step2_output_datapath)\{\
\
    #Reading the input files:      \
    #Concatenated file generated by '''Step2_TRBclonotype_txtFile_concatenation.R'''\
    clonotypes <- read_csv(\
            file.path(\
                    step2_output_datapath , \
                    step2_output_filename\
                    ), \
            )%>% \
            filter ( Patient_id %in% patient)%>%\
            filter ( Cohort == cohort) %>%\
            mutate(VJcombo = gsub("[.]", "_", VJcombo))\
            #mutate ( VJcombo = stringr::str_c(Vcassette ,      #Because the presence of dot'.' symbol is a source of error for ggraph\
                                             #"_" ,             #we need to re-generate VJcombo column, where V and J genes are glued\
                                             #Jcassette) )      #by "_" instead of ".".\
\
    clonotypes <- clonotypes[-c(grep("[*]", clonotypes$aaSeqCDR3)),]\
    clonotypes <- clonotypes[-c(grep("_", clonotypes$aaSeqCDR3)),]\
    for(clone in 1:length(clonotypes$cloneFraction))\{\
        clonotypes$cloneFraction[clone] <- clonotypes$cloneCount[clone]/sum(clonotypes[which(clonotypes$Cycle==clonotypes$Cycle[clone]),]$cloneCount)\
    \}\
\
    #Concatenated file generated by '''Step1_aaCDR3perVJ_input_generation.R'''\
    cassette_stats <- read_csv(\
            file.path(\
                    step1_output_datapath , \
                    step1_output_filename )\
            )%>%\
            filter ( Patient_id %in% patient ) %>%\
            filter ( Cohort == cohort ) %>%\
            filter ( Number_aaCDR3 > 1 ) %>%\
            select ( Patient_id , Cycle , VJcombo ) %>%\
            mutate ( VJcombo = str_replace ( VJcombo , "\\\\.", "_"))\
\
    clonotypes <- clonotypes[which(clonotypes$VJcombo %in% cassette_stats$VJcombo),]\
\
    # Creates dataframe containing the correlation between clone fraction and CDR3 per VJ at each timepoint\
    correl_total <- data.frame(matrix(NA, ncol=2,nrow=length(timepoint_order)))\
    colnames(correl_total) <- c("Cycle", "correl")\
    f <- 1\
\
    # Fills in previously created dataframe\
    for(cycle in unique(clonotypes$Cycle))\{\
        cycle_df <- clonotypes[which(clonotypes$Cycle==cycle),]\
        # Creates dataframe analyzing average clone fraction and number of CDR3 for each VJ\
        correl_VJ <- data.frame(matrix(NA, ncol=3, nrow=length(unique(cycle_df$VJcombo))))\
        colnames(correl_VJ) <- c("VJCombo", "AvgCloneFraction", "NumCDR3")\
        for(i in 1:length(unique(cycle_df$VJcombo)))\{\
            VJ_df <- cycle_df[which(cycle_df$VJcombo==unique(cycle_df$VJcombo)[i]),]\
            correl_VJ$VJCombo[i] <- unique(cycle_df$VJcombo)[i]\
            correl_VJ$AvgCloneFraction[i] <- mean(VJ_df$cloneFraction)\
            correl_VJ$NumCDR3[i] <- length(VJ_df$cloneFraction)\
        \}\
    # Run correlation test to fill in dataframe\
    correl_total$Cycle[f] <- cycle\
    correl_total$correl[f] <- cor(correl_VJ$NumCDR3, correl_VJ$AvgCloneFraction)^2\
    f <- f + 1\
    \}\
    print(correl_total)\
\}}